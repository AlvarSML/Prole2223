// Generated by GNU Bison 3.5.1.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "trabajoBison.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . stmtsequence $end\l"]
  0 -> 1 [style=solid label="IF"]
  0 -> 2 [style=solid label="WHILE"]
  0 -> 3 [style=solid label="PRINT"]
  0 -> 4 [style=solid label="ID"]
  0 -> 5 [style=dashed label="stmtsequence"]
  0 -> 6 [style=dashed label="programstmt"]
  0 -> 7 [style=dashed label="loopconstruct"]
  0 -> 8 [style=dashed label="ifconstruct"]
  0 -> 9 [style=dashed label="ifthenstmt"]
  0 -> 10 [style=dashed label="printstmt"]
  0 -> 11 [style=dashed label="assigconstruct"]
  1 [label="State 1\n\l  9 ifthenstmt: IF . '(' expr ')' THEN\l"]
  1 -> 12 [style=solid label="'('"]
  2 [label="State 2\n\l  7 loopconstruct: WHILE . '(' expr ')' stmtsequence ENDWHILE\l"]
  2 -> 13 [style=solid label="'('"]
  3 [label="State 3\n\l 16 printstmt: PRINT . expr printexprs\l"]
  3 -> 14 [style=solid label="ID"]
  3 -> 15 [style=solid label="NUM"]
  3 -> 16 [style=solid label="'('"]
  3 -> 17 [style=dashed label="expr"]
  3 -> 18 [style=dashed label="multexp"]
  3 -> 19 [style=dashed label="value"]
  4 [label="State 4\n\l 20 assigconstruct: ID . $@1 assignopts\l"]
  4 -> 20 [style=dashed label="$@1"]
  4 -> "4R19" [style=solid]
 "4R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  0 $accept: stmtsequence . $end\l"]
  5 -> 21 [style=solid label="$end"]
  6 [label="State 6\n\l  1 stmtsequence: programstmt .\l  2             | programstmt . stmtsequence\l"]
  6 -> 1 [style=solid label="IF"]
  6 -> 2 [style=solid label="WHILE"]
  6 -> 3 [style=solid label="PRINT"]
  6 -> 4 [style=solid label="ID"]
  6 -> 22 [style=dashed label="stmtsequence"]
  6 -> 6 [style=dashed label="programstmt"]
  6 -> 7 [style=dashed label="loopconstruct"]
  6 -> 8 [style=dashed label="ifconstruct"]
  6 -> 9 [style=dashed label="ifthenstmt"]
  6 -> 10 [style=dashed label="printstmt"]
  6 -> 11 [style=dashed label="assigconstruct"]
  6 -> "6R1" [style=solid]
 "6R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  4 programstmt: loopconstruct .\l"]
  7 -> "7R4" [style=solid]
 "7R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  5 programstmt: ifconstruct .\l"]
  8 -> "8R5" [style=solid]
 "8R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  8 ifconstruct: ifthenstmt . stmtsequence elseifconstruct elseconstruct ENDIF\l"]
  9 -> 1 [style=solid label="IF"]
  9 -> 2 [style=solid label="WHILE"]
  9 -> 3 [style=solid label="PRINT"]
  9 -> 4 [style=solid label="ID"]
  9 -> 23 [style=dashed label="stmtsequence"]
  9 -> 6 [style=dashed label="programstmt"]
  9 -> 7 [style=dashed label="loopconstruct"]
  9 -> 8 [style=dashed label="ifconstruct"]
  9 -> 9 [style=dashed label="ifthenstmt"]
  9 -> 10 [style=dashed label="printstmt"]
  9 -> 11 [style=dashed label="assigconstruct"]
  10 [label="State 10\n\l  6 programstmt: printstmt .\l"]
  10 -> "10R6" [style=solid]
 "10R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l  3 programstmt: assigconstruct .\l"]
  11 -> "11R3" [style=solid]
 "11R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l  9 ifthenstmt: IF '(' . expr ')' THEN\l"]
  12 -> 14 [style=solid label="ID"]
  12 -> 15 [style=solid label="NUM"]
  12 -> 16 [style=solid label="'('"]
  12 -> 24 [style=dashed label="expr"]
  12 -> 18 [style=dashed label="multexp"]
  12 -> 19 [style=dashed label="value"]
  13 [label="State 13\n\l  7 loopconstruct: WHILE '(' . expr ')' stmtsequence ENDWHILE\l"]
  13 -> 14 [style=solid label="ID"]
  13 -> 15 [style=solid label="NUM"]
  13 -> 16 [style=solid label="'('"]
  13 -> 25 [style=dashed label="expr"]
  13 -> 18 [style=dashed label="multexp"]
  13 -> 19 [style=dashed label="value"]
  14 [label="State 14\n\l 31 value: ID .\l"]
  14 -> "14R31" [style=solid]
 "14R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 30 value: NUM .\l"]
  15 -> "15R30" [style=solid]
 "15R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l 29 value: '(' . expr ')'\l"]
  16 -> 14 [style=solid label="ID"]
  16 -> 15 [style=solid label="NUM"]
  16 -> 16 [style=solid label="'('"]
  16 -> 26 [style=dashed label="expr"]
  16 -> 18 [style=dashed label="multexp"]
  16 -> 19 [style=dashed label="value"]
  17 [label="State 17\n\l 16 printstmt: PRINT expr . printexprs\l 24 expr: expr . '+' multexp expr '-' multexp\l"]
  17 -> 27 [style=solid label="','"]
  17 -> 28 [style=solid label="'+'"]
  17 -> 29 [style=dashed label="printexprs"]
  17 -> "17R18" [style=solid]
 "17R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 25 expr: multexp .\l 26 multexp: multexp . '*' value\l 27        | multexp . '/' value\l"]
  18 -> 30 [style=solid label="'*'"]
  18 -> 31 [style=solid label="'/'"]
  18 -> "18R25" [style=solid]
 "18R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 28 multexp: value .\l"]
  19 -> "19R28" [style=solid]
 "19R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 20 assigconstruct: ID $@1 . assignopts\l"]
  20 -> 32 [style=solid label="INCREMENTO"]
  20 -> 33 [style=solid label="DECREMENTO"]
  20 -> 34 [style=solid label="ASIGNA"]
  20 -> 35 [style=dashed label="assignopts"]
  21 [label="State 21\n\l  0 $accept: stmtsequence $end .\l"]
  21 -> "21R0" [style=solid]
 "21R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  22 [label="State 22\n\l  2 stmtsequence: programstmt stmtsequence .\l"]
  22 -> "22R2" [style=solid]
 "22R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  23 [label="State 23\n\l  8 ifconstruct: ifthenstmt stmtsequence . elseifconstruct elseconstruct ENDIF\l"]
  23 -> 36 [style=solid label="ELSEIF"]
  23 -> 37 [style=dashed label="elseifconstruct"]
  24 [label="State 24\n\l  9 ifthenstmt: IF '(' expr . ')' THEN\l 24 expr: expr . '+' multexp expr '-' multexp\l"]
  24 -> 38 [style=solid label="')'"]
  24 -> 28 [style=solid label="'+'"]
  25 [label="State 25\n\l  7 loopconstruct: WHILE '(' expr . ')' stmtsequence ENDWHILE\l 24 expr: expr . '+' multexp expr '-' multexp\l"]
  25 -> 39 [style=solid label="')'"]
  25 -> 28 [style=solid label="'+'"]
  26 [label="State 26\n\l 24 expr: expr . '+' multexp expr '-' multexp\l 29 value: '(' expr . ')'\l"]
  26 -> 40 [style=solid label="')'"]
  26 -> 28 [style=solid label="'+'"]
  27 [label="State 27\n\l 17 printexprs: ',' . expr\l"]
  27 -> 14 [style=solid label="ID"]
  27 -> 15 [style=solid label="NUM"]
  27 -> 16 [style=solid label="'('"]
  27 -> 41 [style=dashed label="expr"]
  27 -> 18 [style=dashed label="multexp"]
  27 -> 19 [style=dashed label="value"]
  28 [label="State 28\n\l 24 expr: expr '+' . multexp expr '-' multexp\l"]
  28 -> 14 [style=solid label="ID"]
  28 -> 15 [style=solid label="NUM"]
  28 -> 16 [style=solid label="'('"]
  28 -> 42 [style=dashed label="multexp"]
  28 -> 19 [style=dashed label="value"]
  29 [label="State 29\n\l 16 printstmt: PRINT expr printexprs .\l"]
  29 -> "29R16" [style=solid]
 "29R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 26 multexp: multexp '*' . value\l"]
  30 -> 14 [style=solid label="ID"]
  30 -> 15 [style=solid label="NUM"]
  30 -> 16 [style=solid label="'('"]
  30 -> 43 [style=dashed label="value"]
  31 [label="State 31\n\l 27 multexp: multexp '/' . value\l"]
  31 -> 14 [style=solid label="ID"]
  31 -> 15 [style=solid label="NUM"]
  31 -> 16 [style=solid label="'('"]
  31 -> 44 [style=dashed label="value"]
  32 [label="State 32\n\l 22 assignopts: INCREMENTO .\l"]
  32 -> "32R22" [style=solid]
 "32R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 23 assignopts: DECREMENTO .\l"]
  33 -> "33R23" [style=solid]
 "33R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 21 assignopts: ASIGNA . expr\l"]
  34 -> 14 [style=solid label="ID"]
  34 -> 15 [style=solid label="NUM"]
  34 -> 16 [style=solid label="'('"]
  34 -> 45 [style=dashed label="expr"]
  34 -> 18 [style=dashed label="multexp"]
  34 -> 19 [style=dashed label="value"]
  35 [label="State 35\n\l 20 assigconstruct: ID $@1 assignopts .\l"]
  35 -> "35R20" [style=solid]
 "35R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 10 elseifconstruct: ELSEIF . '(' expr ')' THEN stmtsequence elseiffinal\l"]
  36 -> 46 [style=solid label="'('"]
  37 [label="State 37\n\l  8 ifconstruct: ifthenstmt stmtsequence elseifconstruct . elseconstruct ENDIF\l"]
  37 -> 47 [style=solid label="ELSE"]
  37 -> 48 [style=dashed label="elseconstruct"]
  37 -> 49 [style=dashed label="elseseq"]
  37 -> "37R14" [style=solid]
 "37R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l  9 ifthenstmt: IF '(' expr ')' . THEN\l"]
  38 -> 50 [style=solid label="THEN"]
  39 [label="State 39\n\l  7 loopconstruct: WHILE '(' expr ')' . stmtsequence ENDWHILE\l"]
  39 -> 1 [style=solid label="IF"]
  39 -> 2 [style=solid label="WHILE"]
  39 -> 3 [style=solid label="PRINT"]
  39 -> 4 [style=solid label="ID"]
  39 -> 51 [style=dashed label="stmtsequence"]
  39 -> 6 [style=dashed label="programstmt"]
  39 -> 7 [style=dashed label="loopconstruct"]
  39 -> 8 [style=dashed label="ifconstruct"]
  39 -> 9 [style=dashed label="ifthenstmt"]
  39 -> 10 [style=dashed label="printstmt"]
  39 -> 11 [style=dashed label="assigconstruct"]
  40 [label="State 40\n\l 29 value: '(' expr ')' .\l"]
  40 -> "40R29" [style=solid]
 "40R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 17 printexprs: ',' expr .\l 24 expr: expr . '+' multexp expr '-' multexp\l"]
  41 -> 28 [style=solid label="'+'"]
  41 -> "41R17" [style=solid]
 "41R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l 24 expr: expr '+' multexp . expr '-' multexp\l 26 multexp: multexp . '*' value\l 27        | multexp . '/' value\l"]
  42 -> 14 [style=solid label="ID"]
  42 -> 15 [style=solid label="NUM"]
  42 -> 16 [style=solid label="'('"]
  42 -> 30 [style=solid label="'*'"]
  42 -> 31 [style=solid label="'/'"]
  42 -> 52 [style=dashed label="expr"]
  42 -> 18 [style=dashed label="multexp"]
  42 -> 19 [style=dashed label="value"]
  43 [label="State 43\n\l 26 multexp: multexp '*' value .\l"]
  43 -> "43R26" [style=solid]
 "43R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 27 multexp: multexp '/' value .\l"]
  44 -> "44R27" [style=solid]
 "44R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 21 assignopts: ASIGNA expr .\l 24 expr: expr . '+' multexp expr '-' multexp\l"]
  45 -> 28 [style=solid label="'+'"]
  45 -> "45R21" [style=solid]
 "45R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 10 elseifconstruct: ELSEIF '(' . expr ')' THEN stmtsequence elseiffinal\l"]
  46 -> 14 [style=solid label="ID"]
  46 -> 15 [style=solid label="NUM"]
  46 -> 16 [style=solid label="'('"]
  46 -> 53 [style=dashed label="expr"]
  46 -> 18 [style=dashed label="multexp"]
  46 -> 19 [style=dashed label="value"]
  47 [label="State 47\n\l 15 elseseq: ELSE . stmtsequence\l"]
  47 -> 1 [style=solid label="IF"]
  47 -> 2 [style=solid label="WHILE"]
  47 -> 3 [style=solid label="PRINT"]
  47 -> 4 [style=solid label="ID"]
  47 -> 54 [style=dashed label="stmtsequence"]
  47 -> 6 [style=dashed label="programstmt"]
  47 -> 7 [style=dashed label="loopconstruct"]
  47 -> 8 [style=dashed label="ifconstruct"]
  47 -> 9 [style=dashed label="ifthenstmt"]
  47 -> 10 [style=dashed label="printstmt"]
  47 -> 11 [style=dashed label="assigconstruct"]
  48 [label="State 48\n\l  8 ifconstruct: ifthenstmt stmtsequence elseifconstruct elseconstruct . ENDIF\l"]
  48 -> 55 [style=solid label="ENDIF"]
  49 [label="State 49\n\l 13 elseconstruct: elseseq .\l"]
  49 -> "49R13" [style=solid]
 "49R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l  9 ifthenstmt: IF '(' expr ')' THEN .\l"]
  50 -> "50R9" [style=solid]
 "50R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l  7 loopconstruct: WHILE '(' expr ')' stmtsequence . ENDWHILE\l"]
  51 -> 56 [style=solid label="ENDWHILE"]
  52 [label="State 52\n\l 24 expr: expr . '+' multexp expr '-' multexp\l 24     | expr '+' multexp expr . '-' multexp\l"]
  52 -> 28 [style=solid label="'+'"]
  52 -> 57 [style=solid label="'-'"]
  53 [label="State 53\n\l 10 elseifconstruct: ELSEIF '(' expr . ')' THEN stmtsequence elseiffinal\l 24 expr: expr . '+' multexp expr '-' multexp\l"]
  53 -> 58 [style=solid label="')'"]
  53 -> 28 [style=solid label="'+'"]
  54 [label="State 54\n\l 15 elseseq: ELSE stmtsequence .\l"]
  54 -> "54R15" [style=solid]
 "54R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l  8 ifconstruct: ifthenstmt stmtsequence elseifconstruct elseconstruct ENDIF .\l"]
  55 -> "55R8" [style=solid]
 "55R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l  7 loopconstruct: WHILE '(' expr ')' stmtsequence ENDWHILE .\l"]
  56 -> "56R7" [style=solid]
 "56R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l 24 expr: expr '+' multexp expr '-' . multexp\l"]
  57 -> 14 [style=solid label="ID"]
  57 -> 15 [style=solid label="NUM"]
  57 -> 16 [style=solid label="'('"]
  57 -> 59 [style=dashed label="multexp"]
  57 -> 19 [style=dashed label="value"]
  58 [label="State 58\n\l 10 elseifconstruct: ELSEIF '(' expr ')' . THEN stmtsequence elseiffinal\l"]
  58 -> 60 [style=solid label="THEN"]
  59 [label="State 59\n\l 24 expr: expr '+' multexp expr '-' multexp .\l 26 multexp: multexp . '*' value\l 27        | multexp . '/' value\l"]
  59 -> 30 [style=solid label="'*'"]
  59 -> 31 [style=solid label="'/'"]
  59 -> "59R24" [style=solid]
 "59R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 10 elseifconstruct: ELSEIF '(' expr ')' THEN . stmtsequence elseiffinal\l"]
  60 -> 1 [style=solid label="IF"]
  60 -> 2 [style=solid label="WHILE"]
  60 -> 3 [style=solid label="PRINT"]
  60 -> 4 [style=solid label="ID"]
  60 -> 61 [style=dashed label="stmtsequence"]
  60 -> 6 [style=dashed label="programstmt"]
  60 -> 7 [style=dashed label="loopconstruct"]
  60 -> 8 [style=dashed label="ifconstruct"]
  60 -> 9 [style=dashed label="ifthenstmt"]
  60 -> 10 [style=dashed label="printstmt"]
  60 -> 11 [style=dashed label="assigconstruct"]
  61 [label="State 61\n\l 10 elseifconstruct: ELSEIF '(' expr ')' THEN stmtsequence . elseiffinal\l"]
  61 -> 36 [style=solid label="ELSEIF"]
  61 -> 62 [style=dashed label="elseifconstruct"]
  61 -> 63 [style=dashed label="elseiffinal"]
  61 -> "61R12" [style=solid]
 "61R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 11 elseiffinal: elseifconstruct .\l"]
  62 -> "62R11" [style=solid]
 "62R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l 10 elseifconstruct: ELSEIF '(' expr ')' THEN stmtsequence elseiffinal .\l"]
  63 -> "63R10" [style=solid]
 "63R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
}
