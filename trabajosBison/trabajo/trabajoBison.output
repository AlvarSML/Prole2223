Grammar

    0 $accept: stmtsequence $end

    1 stmtsequence: programstmt
    2             | programstmt stmtsequence

    3 programstmt: assigconstruct
    4            | loopconstruct
    5            | ifconstruct
    6            | printstmt

    7 loopconstruct: WHILE '(' expr ')' stmtsequence ENDWHILE

    8 ifconstruct: ifthenstmt stmtsequence elseifconstruct elseconstruct ENDIF

    9 ifthenstmt: IF '(' expr ')' THEN

   10 elseifconstruct: ELSEIF '(' expr ')' THEN stmtsequence elseiffinal

   11 elseiffinal: elseifconstruct
   12            | %empty

   13 elseconstruct: elseseq
   14              | %empty

   15 elseseq: ELSE stmtsequence

   16 printstmt: PRINT expr printexprs

   17 printexprs: ',' expr
   18           | %empty

   19 $@1: %empty

   20 assigconstruct: ID $@1 assignopts

   21 assignopts: ASIGNA expr
   22           | INCREMENTO
   23           | DECREMENTO

   24 expr: expr expropts multexp
   25     | multexp

   26 expropts: MAS
   27         | MENOS

   28 multexp: multexp multexpropts value
   29        | value

   30 multexpropts: POR
   31             | ENTRE

   32 value: '(' expr ')'
   33      | NUM
   34      | ID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 7 9 10 32
    ')' (41) 7 9 10 32
    ',' (44) 17
    error (256)
    IF (258) 9
    THEN (259) 9 10
    ELSEIF (260) 10
    ELSE (261) 15
    WHILE (262) 7
    ENDWHILE (263) 7
    ENDIF (264) 8
    INCREMENTO (265) 22
    DECREMENTO (266) 23
    PRINT (267) 16
    ASIGNA (268) 21
    MAS (269) 26
    MENOS (270) 27
    POR (271) 30
    ENTRE (272) 31
    ID <string> (273) 20 34
    NUM <numero> (274) 33


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    stmtsequence (24)
        on left: 1 2
        on right: 0 2 7 8 10 15
    programstmt (25)
        on left: 3 4 5 6
        on right: 1 2
    loopconstruct (26)
        on left: 7
        on right: 4
    ifconstruct (27)
        on left: 8
        on right: 5
    ifthenstmt (28)
        on left: 9
        on right: 8
    elseifconstruct (29)
        on left: 10
        on right: 8 11
    elseiffinal (30)
        on left: 11 12
        on right: 10
    elseconstruct (31)
        on left: 13 14
        on right: 8
    elseseq (32)
        on left: 15
        on right: 13
    printstmt (33)
        on left: 16
        on right: 6
    printexprs (34)
        on left: 17 18
        on right: 16
    assigconstruct (35)
        on left: 20
        on right: 3
    $@1 (36)
        on left: 19
        on right: 20
    assignopts (37)
        on left: 21 22 23
        on right: 20
    expr (38)
        on left: 24 25
        on right: 7 9 10 16 17 21 24 32
    expropts (39)
        on left: 26 27
        on right: 24
    multexp (40)
        on left: 28 29
        on right: 24 25 28
    multexpropts <string> (41)
        on left: 30 31
        on right: 28
    value (42)
        on left: 32 33 34
        on right: 28 29


State 0

    0 $accept: . stmtsequence $end
    1 stmtsequence: . programstmt
    2             | . programstmt stmtsequence
    3 programstmt: . assigconstruct
    4            | . loopconstruct
    5            | . ifconstruct
    6            | . printstmt
    7 loopconstruct: . WHILE '(' expr ')' stmtsequence ENDWHILE
    8 ifconstruct: . ifthenstmt stmtsequence elseifconstruct elseconstruct ENDIF
    9 ifthenstmt: . IF '(' expr ')' THEN
   16 printstmt: . PRINT expr printexprs
   20 assigconstruct: . ID $@1 assignopts

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    PRINT  shift, and go to state 3
    ID     shift, and go to state 4

    stmtsequence    go to state 5
    programstmt     go to state 6
    loopconstruct   go to state 7
    ifconstruct     go to state 8
    ifthenstmt      go to state 9
    printstmt       go to state 10
    assigconstruct  go to state 11


State 1

    9 ifthenstmt: IF . '(' expr ')' THEN

    '('  shift, and go to state 12


State 2

    7 loopconstruct: WHILE . '(' expr ')' stmtsequence ENDWHILE

    '('  shift, and go to state 13


State 3

   16 printstmt: PRINT . expr printexprs
   24 expr: . expr expropts multexp
   25     | . multexp
   28 multexp: . multexp multexpropts value
   29        | . value
   32 value: . '(' expr ')'
   33      | . NUM
   34      | . ID

    ID   shift, and go to state 14
    NUM  shift, and go to state 15
    '('  shift, and go to state 16

    expr     go to state 17
    multexp  go to state 18
    value    go to state 19


State 4

   19 $@1: . %empty
   20 assigconstruct: ID . $@1 assignopts

    $default  reduce using rule 19 ($@1)

    $@1  go to state 20


State 5

    0 $accept: stmtsequence . $end

    $end  shift, and go to state 21


State 6

    1 stmtsequence: . programstmt
    1             | programstmt .
    2             | . programstmt stmtsequence
    2             | programstmt . stmtsequence
    3 programstmt: . assigconstruct
    4            | . loopconstruct
    5            | . ifconstruct
    6            | . printstmt
    7 loopconstruct: . WHILE '(' expr ')' stmtsequence ENDWHILE
    8 ifconstruct: . ifthenstmt stmtsequence elseifconstruct elseconstruct ENDIF
    9 ifthenstmt: . IF '(' expr ')' THEN
   16 printstmt: . PRINT expr printexprs
   20 assigconstruct: . ID $@1 assignopts

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    PRINT  shift, and go to state 3
    ID     shift, and go to state 4

    $default  reduce using rule 1 (stmtsequence)

    stmtsequence    go to state 22
    programstmt     go to state 6
    loopconstruct   go to state 7
    ifconstruct     go to state 8
    ifthenstmt      go to state 9
    printstmt       go to state 10
    assigconstruct  go to state 11


State 7

    4 programstmt: loopconstruct .

    $default  reduce using rule 4 (programstmt)


State 8

    5 programstmt: ifconstruct .

    $default  reduce using rule 5 (programstmt)


State 9

    1 stmtsequence: . programstmt
    2             | . programstmt stmtsequence
    3 programstmt: . assigconstruct
    4            | . loopconstruct
    5            | . ifconstruct
    6            | . printstmt
    7 loopconstruct: . WHILE '(' expr ')' stmtsequence ENDWHILE
    8 ifconstruct: . ifthenstmt stmtsequence elseifconstruct elseconstruct ENDIF
    8            | ifthenstmt . stmtsequence elseifconstruct elseconstruct ENDIF
    9 ifthenstmt: . IF '(' expr ')' THEN
   16 printstmt: . PRINT expr printexprs
   20 assigconstruct: . ID $@1 assignopts

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    PRINT  shift, and go to state 3
    ID     shift, and go to state 4

    stmtsequence    go to state 23
    programstmt     go to state 6
    loopconstruct   go to state 7
    ifconstruct     go to state 8
    ifthenstmt      go to state 9
    printstmt       go to state 10
    assigconstruct  go to state 11


State 10

    6 programstmt: printstmt .

    $default  reduce using rule 6 (programstmt)


State 11

    3 programstmt: assigconstruct .

    $default  reduce using rule 3 (programstmt)


State 12

    9 ifthenstmt: IF '(' . expr ')' THEN
   24 expr: . expr expropts multexp
   25     | . multexp
   28 multexp: . multexp multexpropts value
   29        | . value
   32 value: . '(' expr ')'
   33      | . NUM
   34      | . ID

    ID   shift, and go to state 14
    NUM  shift, and go to state 15
    '('  shift, and go to state 16

    expr     go to state 24
    multexp  go to state 18
    value    go to state 19


State 13

    7 loopconstruct: WHILE '(' . expr ')' stmtsequence ENDWHILE
   24 expr: . expr expropts multexp
   25     | . multexp
   28 multexp: . multexp multexpropts value
   29        | . value
   32 value: . '(' expr ')'
   33      | . NUM
   34      | . ID

    ID   shift, and go to state 14
    NUM  shift, and go to state 15
    '('  shift, and go to state 16

    expr     go to state 25
    multexp  go to state 18
    value    go to state 19


State 14

   34 value: ID .

    $default  reduce using rule 34 (value)


State 15

   33 value: NUM .

    $default  reduce using rule 33 (value)


State 16

   24 expr: . expr expropts multexp
   25     | . multexp
   28 multexp: . multexp multexpropts value
   29        | . value
   32 value: . '(' expr ')'
   32      | '(' . expr ')'
   33      | . NUM
   34      | . ID

    ID   shift, and go to state 14
    NUM  shift, and go to state 15
    '('  shift, and go to state 16

    expr     go to state 26
    multexp  go to state 18
    value    go to state 19


State 17

   16 printstmt: PRINT expr . printexprs
   17 printexprs: . ',' expr
   18           | . %empty
   24 expr: expr . expropts multexp
   26 expropts: . MAS
   27         | . MENOS

    MAS    shift, and go to state 27
    MENOS  shift, and go to state 28
    ','    shift, and go to state 29

    $default  reduce using rule 18 (printexprs)

    printexprs  go to state 30
    expropts    go to state 31


State 18

   25 expr: multexp .
   28 multexp: multexp . multexpropts value
   30 multexpropts: . POR
   31             | . ENTRE

    POR    shift, and go to state 32
    ENTRE  shift, and go to state 33

    $default  reduce using rule 25 (expr)

    multexpropts  go to state 34


State 19

   29 multexp: value .

    $default  reduce using rule 29 (multexp)


State 20

   20 assigconstruct: ID $@1 . assignopts
   21 assignopts: . ASIGNA expr
   22           | . INCREMENTO
   23           | . DECREMENTO

    INCREMENTO  shift, and go to state 35
    DECREMENTO  shift, and go to state 36
    ASIGNA      shift, and go to state 37

    assignopts  go to state 38


State 21

    0 $accept: stmtsequence $end .

    $default  accept


State 22

    2 stmtsequence: programstmt stmtsequence .

    $default  reduce using rule 2 (stmtsequence)


State 23

    8 ifconstruct: ifthenstmt stmtsequence . elseifconstruct elseconstruct ENDIF
   10 elseifconstruct: . ELSEIF '(' expr ')' THEN stmtsequence elseiffinal

    ELSEIF  shift, and go to state 39

    elseifconstruct  go to state 40


State 24

    9 ifthenstmt: IF '(' expr . ')' THEN
   24 expr: expr . expropts multexp
   26 expropts: . MAS
   27         | . MENOS

    MAS    shift, and go to state 27
    MENOS  shift, and go to state 28
    ')'    shift, and go to state 41

    expropts  go to state 31


State 25

    7 loopconstruct: WHILE '(' expr . ')' stmtsequence ENDWHILE
   24 expr: expr . expropts multexp
   26 expropts: . MAS
   27         | . MENOS

    MAS    shift, and go to state 27
    MENOS  shift, and go to state 28
    ')'    shift, and go to state 42

    expropts  go to state 31


State 26

   24 expr: expr . expropts multexp
   26 expropts: . MAS
   27         | . MENOS
   32 value: '(' expr . ')'

    MAS    shift, and go to state 27
    MENOS  shift, and go to state 28
    ')'    shift, and go to state 43

    expropts  go to state 31


State 27

   26 expropts: MAS .

    $default  reduce using rule 26 (expropts)


State 28

   27 expropts: MENOS .

    $default  reduce using rule 27 (expropts)


State 29

   17 printexprs: ',' . expr
   24 expr: . expr expropts multexp
   25     | . multexp
   28 multexp: . multexp multexpropts value
   29        | . value
   32 value: . '(' expr ')'
   33      | . NUM
   34      | . ID

    ID   shift, and go to state 14
    NUM  shift, and go to state 15
    '('  shift, and go to state 16

    expr     go to state 44
    multexp  go to state 18
    value    go to state 19


State 30

   16 printstmt: PRINT expr printexprs .

    $default  reduce using rule 16 (printstmt)


State 31

   24 expr: expr expropts . multexp
   28 multexp: . multexp multexpropts value
   29        | . value
   32 value: . '(' expr ')'
   33      | . NUM
   34      | . ID

    ID   shift, and go to state 14
    NUM  shift, and go to state 15
    '('  shift, and go to state 16

    multexp  go to state 45
    value    go to state 19


State 32

   30 multexpropts: POR .

    $default  reduce using rule 30 (multexpropts)


State 33

   31 multexpropts: ENTRE .

    $default  reduce using rule 31 (multexpropts)


State 34

   28 multexp: multexp multexpropts . value
   32 value: . '(' expr ')'
   33      | . NUM
   34      | . ID

    ID   shift, and go to state 14
    NUM  shift, and go to state 15
    '('  shift, and go to state 16

    value  go to state 46


State 35

   22 assignopts: INCREMENTO .

    $default  reduce using rule 22 (assignopts)


State 36

   23 assignopts: DECREMENTO .

    $default  reduce using rule 23 (assignopts)


State 37

   21 assignopts: ASIGNA . expr
   24 expr: . expr expropts multexp
   25     | . multexp
   28 multexp: . multexp multexpropts value
   29        | . value
   32 value: . '(' expr ')'
   33      | . NUM
   34      | . ID

    ID   shift, and go to state 14
    NUM  shift, and go to state 15
    '('  shift, and go to state 16

    expr     go to state 47
    multexp  go to state 18
    value    go to state 19


State 38

   20 assigconstruct: ID $@1 assignopts .

    $default  reduce using rule 20 (assigconstruct)


State 39

   10 elseifconstruct: ELSEIF . '(' expr ')' THEN stmtsequence elseiffinal

    '('  shift, and go to state 48


State 40

    8 ifconstruct: ifthenstmt stmtsequence elseifconstruct . elseconstruct ENDIF
   13 elseconstruct: . elseseq
   14              | . %empty
   15 elseseq: . ELSE stmtsequence

    ELSE  shift, and go to state 49

    $default  reduce using rule 14 (elseconstruct)

    elseconstruct  go to state 50
    elseseq        go to state 51


State 41

    9 ifthenstmt: IF '(' expr ')' . THEN

    THEN  shift, and go to state 52


State 42

    1 stmtsequence: . programstmt
    2             | . programstmt stmtsequence
    3 programstmt: . assigconstruct
    4            | . loopconstruct
    5            | . ifconstruct
    6            | . printstmt
    7 loopconstruct: . WHILE '(' expr ')' stmtsequence ENDWHILE
    7              | WHILE '(' expr ')' . stmtsequence ENDWHILE
    8 ifconstruct: . ifthenstmt stmtsequence elseifconstruct elseconstruct ENDIF
    9 ifthenstmt: . IF '(' expr ')' THEN
   16 printstmt: . PRINT expr printexprs
   20 assigconstruct: . ID $@1 assignopts

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    PRINT  shift, and go to state 3
    ID     shift, and go to state 4

    stmtsequence    go to state 53
    programstmt     go to state 6
    loopconstruct   go to state 7
    ifconstruct     go to state 8
    ifthenstmt      go to state 9
    printstmt       go to state 10
    assigconstruct  go to state 11


State 43

   32 value: '(' expr ')' .

    $default  reduce using rule 32 (value)


State 44

   17 printexprs: ',' expr .
   24 expr: expr . expropts multexp
   26 expropts: . MAS
   27         | . MENOS

    MAS    shift, and go to state 27
    MENOS  shift, and go to state 28

    $default  reduce using rule 17 (printexprs)

    expropts  go to state 31


State 45

   24 expr: expr expropts multexp .
   28 multexp: multexp . multexpropts value
   30 multexpropts: . POR
   31             | . ENTRE

    POR    shift, and go to state 32
    ENTRE  shift, and go to state 33

    $default  reduce using rule 24 (expr)

    multexpropts  go to state 34


State 46

   28 multexp: multexp multexpropts value .

    $default  reduce using rule 28 (multexp)


State 47

   21 assignopts: ASIGNA expr .
   24 expr: expr . expropts multexp
   26 expropts: . MAS
   27         | . MENOS

    MAS    shift, and go to state 27
    MENOS  shift, and go to state 28

    $default  reduce using rule 21 (assignopts)

    expropts  go to state 31


State 48

   10 elseifconstruct: ELSEIF '(' . expr ')' THEN stmtsequence elseiffinal
   24 expr: . expr expropts multexp
   25     | . multexp
   28 multexp: . multexp multexpropts value
   29        | . value
   32 value: . '(' expr ')'
   33      | . NUM
   34      | . ID

    ID   shift, and go to state 14
    NUM  shift, and go to state 15
    '('  shift, and go to state 16

    expr     go to state 54
    multexp  go to state 18
    value    go to state 19


State 49

    1 stmtsequence: . programstmt
    2             | . programstmt stmtsequence
    3 programstmt: . assigconstruct
    4            | . loopconstruct
    5            | . ifconstruct
    6            | . printstmt
    7 loopconstruct: . WHILE '(' expr ')' stmtsequence ENDWHILE
    8 ifconstruct: . ifthenstmt stmtsequence elseifconstruct elseconstruct ENDIF
    9 ifthenstmt: . IF '(' expr ')' THEN
   15 elseseq: ELSE . stmtsequence
   16 printstmt: . PRINT expr printexprs
   20 assigconstruct: . ID $@1 assignopts

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    PRINT  shift, and go to state 3
    ID     shift, and go to state 4

    stmtsequence    go to state 55
    programstmt     go to state 6
    loopconstruct   go to state 7
    ifconstruct     go to state 8
    ifthenstmt      go to state 9
    printstmt       go to state 10
    assigconstruct  go to state 11


State 50

    8 ifconstruct: ifthenstmt stmtsequence elseifconstruct elseconstruct . ENDIF

    ENDIF  shift, and go to state 56


State 51

   13 elseconstruct: elseseq .

    $default  reduce using rule 13 (elseconstruct)


State 52

    9 ifthenstmt: IF '(' expr ')' THEN .

    $default  reduce using rule 9 (ifthenstmt)


State 53

    7 loopconstruct: WHILE '(' expr ')' stmtsequence . ENDWHILE

    ENDWHILE  shift, and go to state 57


State 54

   10 elseifconstruct: ELSEIF '(' expr . ')' THEN stmtsequence elseiffinal
   24 expr: expr . expropts multexp
   26 expropts: . MAS
   27         | . MENOS

    MAS    shift, and go to state 27
    MENOS  shift, and go to state 28
    ')'    shift, and go to state 58

    expropts  go to state 31


State 55

   15 elseseq: ELSE stmtsequence .

    $default  reduce using rule 15 (elseseq)


State 56

    8 ifconstruct: ifthenstmt stmtsequence elseifconstruct elseconstruct ENDIF .

    $default  reduce using rule 8 (ifconstruct)


State 57

    7 loopconstruct: WHILE '(' expr ')' stmtsequence ENDWHILE .

    $default  reduce using rule 7 (loopconstruct)


State 58

   10 elseifconstruct: ELSEIF '(' expr ')' . THEN stmtsequence elseiffinal

    THEN  shift, and go to state 59


State 59

    1 stmtsequence: . programstmt
    2             | . programstmt stmtsequence
    3 programstmt: . assigconstruct
    4            | . loopconstruct
    5            | . ifconstruct
    6            | . printstmt
    7 loopconstruct: . WHILE '(' expr ')' stmtsequence ENDWHILE
    8 ifconstruct: . ifthenstmt stmtsequence elseifconstruct elseconstruct ENDIF
    9 ifthenstmt: . IF '(' expr ')' THEN
   10 elseifconstruct: ELSEIF '(' expr ')' THEN . stmtsequence elseiffinal
   16 printstmt: . PRINT expr printexprs
   20 assigconstruct: . ID $@1 assignopts

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    PRINT  shift, and go to state 3
    ID     shift, and go to state 4

    stmtsequence    go to state 60
    programstmt     go to state 6
    loopconstruct   go to state 7
    ifconstruct     go to state 8
    ifthenstmt      go to state 9
    printstmt       go to state 10
    assigconstruct  go to state 11


State 60

   10 elseifconstruct: . ELSEIF '(' expr ')' THEN stmtsequence elseiffinal
   10                | ELSEIF '(' expr ')' THEN stmtsequence . elseiffinal
   11 elseiffinal: . elseifconstruct
   12            | . %empty

    ELSEIF  shift, and go to state 39

    $default  reduce using rule 12 (elseiffinal)

    elseifconstruct  go to state 61
    elseiffinal      go to state 62


State 61

   11 elseiffinal: elseifconstruct .

    $default  reduce using rule 11 (elseiffinal)


State 62

   10 elseifconstruct: ELSEIF '(' expr ')' THEN stmtsequence elseiffinal .

    $default  reduce using rule 10 (elseifconstruct)
